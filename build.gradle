// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.71'

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'org.openapi.generator' version '4.3.0'
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

ext {
    packageName = "au.com.woolworths.village"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def libraries = [ "okhttp-gson" ]

libraries.each { lib ->
    def name = lib
        .split("-")
        .collect({ s -> "${Character.toUpperCase(s.charAt(0))}${s.substring(1).toLowerCase()}" })
        .join("")

    def outputLoc = "${projectDir}/${lib}".toString()

    task("generate${name}Sdk", type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
        group = "SDK Generators"
        description = "Generates the Village SDK using the ${lib} framework"
        generatorName = "java"
        validateSpec = true
        library = lib

        inputSpec = "$projectDir/village.json".toString()
        outputDir = outputLoc

        groupId = project.ext.packageName
        id = "sdk-${lib}"
        packageName = "${project.ext.packageName}.sdk"
        apiPackage = "${packageName.get()}.api"
        invokerPackage = "${packageName.get()}.client"
        modelPackage = "${packageName.get()}.dto"

        generateModelTests = false
        generateModelDocumentation = false
        generateApiTests = false
    }

    /*
     * We do not depend on the generation of the SDK as generation
     * should only happen in a controlled manner to ensure that the
     * SDK works for a given version of the API specification. The SDK code
     * should be versioned.
     */
    task("build${name}Sdk") {
        group = "SDK Generators"
        description = "Builds the library '${lib}'"

        dependsOn gradle.includedBuild("sdk-okhttp-gson").task(':build')
    }
}
